import os
import re

def find_vulnerable_versions(folder_path, patterns, max_major=8, max_minor=5, max_patch=4):
    vulnerable_versions = []

    for filename in os.listdir(folder_path):
        if filename.endswith('.txt'):
            with open(os.path.join(folder_path, filename), 'r', encoding='utf-8') as file:
                for line in file:
                    for pattern in patterns:
                        if pattern in line:
                            version_match = re.search(r'(\d+\.\d+\.\d+)', line)
                            if version_match:
                                version_nums = [int(num) for num in version_match.group().split('.')]
                                if version_nums[0] == max_major and (version_nums[1] < max_minor or (version_nums[1] == max_minor and version_nums[2] < max_patch)):
                                    vulnerable_versions.append((filename, version_match.group()))

    return vulnerable_versions

# Usage
folder_path = 'output_html'  # Folder containing the HTML content in text files
patterns = ["Printed by Atlassian Confluence", "由 Atlassian 合流"]  # Patterns to search in each line
vulnerable = find_vulnerable_versions(folder_path, patterns)

for file, version in vulnerable:
    print(f"File: {file}, Vulnerable Version: {version}")